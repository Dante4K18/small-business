{"ast":null,"code":"var _jsxFileName = \"/home/leonard/small-business/frontend/src/components/SupplierList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function SupplierList() {\n//   const [suppliers, setSuppliers] = useState([]);\n//   // const [suppliers, setSuppliers] = useState([]);\n\n//   useEffect(() => {\n//     axios.get(\"http://127.0.0.1:5000/suppliers/\")\n//       .then((response) => {\n//         setSuppliers(response.data);\n//       })\n//       .catch((error) => console.error(\"Error fetching suppliers:\", error));\n//   }, []);\n//   console.log(suppliers);\n\n//   return (\n//     <div>\n//       <h2>Supplier List</h2>\n//       <ul>\n//         {suppliers.map((supplier) => (\n//           <li key={supplier.id}>\n//             {supplier.name} - {supplier.contact_info}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default SupplierList;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SupplierList() {\n  _s();\n  const [suppliers, setSuppliers] = useState([]); // Initialize as an empty array\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://127.0.0.1:5000/suppliers/\").then(response => {\n      console.log(\"Response data:\", response.data);\n      setSuppliers(Array.isArray(response.data.data) ? response.data.data : []);\n    }).catch(error => {\n      console.error(\"Error fetching suppliers:\", error);\n      setError(\"Failed to fetch suppliers. Please try again later.\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Supplier List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: suppliers.map(supplier => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: supplier.name\n      }, supplier.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(SupplierList, \"E4q6BuV/qMIbJLMwYvgSnF3VsV0=\");\n_c = SupplierList;\nexport default SupplierList;\nvar _c;\n$RefreshReg$(_c, \"SupplierList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SupplierList","_s","suppliers","setSuppliers","error","setError","get","then","response","console","log","data","Array","isArray","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","map","supplier","name","id","_c","$RefreshReg$"],"sources":["/home/leonard/small-business/frontend/src/components/SupplierList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// function SupplierList() {\n//   const [suppliers, setSuppliers] = useState([]);\n//   // const [suppliers, setSuppliers] = useState([]);\n\n//   useEffect(() => {\n//     axios.get(\"http://127.0.0.1:5000/suppliers/\")\n//       .then((response) => {\n//         setSuppliers(response.data);\n//       })\n//       .catch((error) => console.error(\"Error fetching suppliers:\", error));\n//   }, []);\n//   console.log(suppliers);\n\n//   return (\n//     <div>\n//       <h2>Supplier List</h2>\n//       <ul>\n//         {suppliers.map((supplier) => (\n//           <li key={supplier.id}>\n//             {supplier.name} - {supplier.contact_info}\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default SupplierList;\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction SupplierList() {\n  const [suppliers, setSuppliers] = useState([]); // Initialize as an empty array\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:5000/suppliers/\")\n      .then((response) => {\n        console.log(\"Response data:\", response.data);\n        setSuppliers(Array.isArray(response.data.data) ? response.data.data : []);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching suppliers:\", error);\n        setError(\"Failed to fetch suppliers. Please try again later.\");\n      });\n  }, []);\n  return (\n    <div>\n      <h2>Supplier List</h2>\n      <ul>\n    {suppliers.map((supplier) => (\n      <li key={supplier.id}>{supplier.name}</li>\n    ))}\n  </ul>\n    </div>\n  );\n}\n\nexport default SupplierList;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFS,GAAG,CAAC,kCAAkC,CAAC,CACvCC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAC5CR,YAAY,CAACS,KAAK,CAACC,OAAO,CAACL,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,GAAGH,QAAQ,CAACG,IAAI,CAACA,IAAI,GAAG,EAAE,CAAC;IAC3E,CAAC,CAAC,CACDG,KAAK,CAAEV,KAAK,IAAK;MAChBK,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDC,QAAQ,CAAC,oDAAoD,CAAC;IAChE,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EACN,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA;MAAAgB,QAAA,EACDb,SAAS,CAACkB,GAAG,CAAEC,QAAQ,iBACtBtB,OAAA;QAAAgB,QAAA,EAAuBM,QAAQ,CAACC;MAAI,GAA3BD,QAAQ,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CA1BQD,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA4BrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}